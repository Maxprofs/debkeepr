% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/lsd-arithmetic.R
\name{deb_multiply}
\alias{deb_multiply}
\title{Multiplication of pounds, shillings, and pence}
\usage{
deb_multiply(lsd, x, bases = c(20, 12), round = 5)
}
\arguments{
\item{lsd}{Numeric vector of length 3 or list of numeric vectors of length
3. The first position of the vector represents the pounds value or l. The
second position represents the shillings value or s. And the third
position represents the pence value or d.}

\item{x}{Multiplier. The value by which \code{lsd} will be multiplied. A numeric
vector of length 1.}

\item{bases}{Numeric vector of length 2 used to specify the bases for
the shillings or s and pence or d units in \code{lsd}. Default is \code{c(20, 12)},
which conforms to the most widely used system of 1 pound = 20 shillings
and 1 shilling = 12 pence. This argument makes it possible to use
alternate bases for the shillings (s) and pence (d) units.}

\item{round}{Round pence to specified number of decimal places.
Default is 5. Set to 0 to return pence as whole numbers.}
}
\value{
Returns either a named numeric vector of length 3 or a list of named
numeric vectors representing the values of pounds, shillings, and pence.
}
\description{
Multiply pounds, shillings, and pence by a multiplier (\code{x}). The result is
normalized to standard bases for shillings and pence units according to the
\code{bases} argument. This is a wrapper around \code{\link[=deb_normalize]{deb_normalize()}}.
}
\examples{
# Multiply pounds, shillings, and pence by 5
deb_multiply(lsd = c(5, 15, 8), x = 5)

# Calculate commission of 3\% of sales of Â£3095 17s. 6d.
deb_multiply(lsd = c(3095, 17, 6), x = 0.03)

# The l, s, and d values do not have to be normalized
deb_multiply(lsd = c(10, 38, 65), x = 5)

# Like deb_normalize(), deb_multiply() can handle negative numbers
deb_multiply(lsd = c(-5, -15, -8), x = 5)
deb_multiply(lsd = c(5, 15, 8), x = -5)

# Or decimals
deb_multiply(lsd = c(5.625, 15.35, 8), x = 5)

# Use round argument to round pence unit to specific decimal place
deb_multiply(lsd = c(5, 15, 8), x = 2 / 3, round = 2)

# Multiply a list of lsd vectors by a multiplier
# This returns a list of named lsd values
lsd_list <- list(c(40, 5, 9), c(29, 7, 1), c(35, 6, 5))

deb_multiply(lsd = lsd_list, x = 5)

}
\seealso{
Other lsd arithmetic functions: \code{\link{deb_add_mutate}},
  \code{\link{deb_add}}, \code{\link{deb_divide_mutate}},
  \code{\link{deb_divide}},
  \code{\link{deb_multiply_mutate}},
  \code{\link{deb_subtract_mutate}},
  \code{\link{deb_subtract}}, \code{\link{deb_sum_df}},
  \code{\link{deb_sum}}
}
\concept{lsd arithmetic functions}
