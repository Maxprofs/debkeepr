% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/lsd-arithmetic.R
\name{deb_multiply}
\alias{deb_multiply}
\title{Multiplication of pounds, shillings, and pence}
\usage{
deb_multiply(lsd, x, bases = c(20, 12), round = 5)
}
\arguments{
\item{lsd}{An lsd value. An object of class lsd or an object that can be
coerced to class lsd: a numeric vector of length 3 or a list of such
vectors.}

\item{x}{Multiplier. The value by which \code{lsd} will be multiplied. A numeric
vector of length 1.}

\item{bases}{Numeric vector of length 2 used to specify the bases for the
shillings or s and pence or d units. Default is \code{c(20, 12)}, which
conforms to the most widely used system of 1 pound = 20 shillings and
1 shilling = 12 pence. If \code{lsd} is of class lsd, the bases attribute will
be used in the place of this argument.}

\item{round}{Round pence unit to specified number of decimal places.
Default is 5. Set to 0 to return pence as whole number.}
}
\value{
Returns an object of class lsd with a bases attribute.
}
\description{
Multiply pounds, shillings, and pence by a multiplier (\code{x}). The result is
normalized to standard bases for shillings and pence units according to the
\code{bases} argument. This is a wrapper around \code{\link[=deb_normalize]{deb_normalize()}}.
}
\examples{
# Multiply pounds, shillings, and pence by 5
deb_multiply(lsd = c(5, 15, 8), x = 5)

# Multiply an lsd value that has alternative bases
deb_multiply(lsd = c(5, 15, 8), x = 5, bases = c(20, 16))

# Multiplying an object of class lsd will use the bases attribute
lsd <- deb_as_lsd(lsd = c(5, 15, 8), bases = c(20, 16))
deb_multiply(lsd = lsd, x = 5)

# Calculate commission of 3\% of sales of Â£3095 17s. 6d.
deb_multiply(lsd = c(3095, 17, 6), x = 0.03)

# The l, s, and d values do not have to be normalized
deb_multiply(lsd = c(10, 38, 65), x = 5)

# Like deb_normalize(), deb_multiply() can handle negative numbers
deb_multiply(lsd = c(-5, -15, -8), x = 5)
deb_multiply(lsd = c(5, 15, 8), x = -5)

# Or decimals
deb_multiply(lsd = c(5.625, 15.35, 8), x = 5)

# Use round argument to round pence unit to specific decimal place
deb_multiply(lsd = c(5, 15, 8), x = 2 / 3, round = 2)

# Multiply a list of lsd values by a multiplier
lsd_list <- list(c(40, 5, 9), c(29, 7, 1), c(35, 6, 5))
deb_multiply(lsd = lsd_list, x = 5)

# Or an lsd object with alternative bases
lsd_list2 <- deb_as_lsd(lsd = lsd_list, bases = c(20, 16))
deb_multiply(lsd = lsd_list2, x = 5)

}
\seealso{
Other lsd arithmetic functions: \code{\link{deb_add}},
  \code{\link{deb_divide}}, \code{\link{deb_subtract}},
  \code{\link{deb_sum}}
}
\concept{lsd arithmetic functions}
