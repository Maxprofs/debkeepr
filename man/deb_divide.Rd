% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/lsd-arithmetic.R
\name{deb_divide}
\alias{deb_divide}
\title{Division of pounds, shillings, and pence}
\usage{
deb_divide(lsd, x, round = 3)
}
\arguments{
\item{lsd}{Numeric vector of length 3 or list of numeric vectors of length
3. The first position of the vector represents the pounds value or l. The
second position represents the shillings value or s. And the third
position represents the pence value or d.}

\item{x}{Divisor. The value by which the given pounds, shillings, and
pence will be divided. Should be a numeric vector of length 1.}

\item{round}{Round pence to specified number of decimal places.
Default is 3. Set to 0 to return pence as whole numbers.}
}
\value{
Returns either a named numeric vector of length 3 or a list of
named numeric vectors representing the values of pounds, shillings,
and pence.
}
\description{
Divide pounds, shillings, and pence by a given divisor (\code{x}).
The result is normalized to correct values based on 12 pence in a
shilling and 20 shillings in a pound. This is a wrapper around
\code{\link[=deb_normalize]{deb_normalize()}}.
}
\examples{
# Divide pounds, shillings, and pence by a divisor
deb_divide(lsd = c(63, 15, 8), x = 5)

# The l, s, and d values do not have to be normalized
deb_divide(lsd = c(109, 38, 65), x = 8)

# Like deb_normalize(), deb_divide() can handle negative numbers
deb_divide(lsd = c(-63, -15, -8), x = 5)
deb_divide(lsd = c(63, 15, 8), x = -5)

# Or decimals
deb_divide(lsd = c(63.625, 15.35, 8), x = 5)

# Divide a list of lsd vectors by a diviso
# This returns a list of named lsd values
lsd_list <- list(c(40, 5, 9), c(29, 7, 1), c(35, 6, 5))

deb_divide(lsd = lsd_list, x = 5)

}
\seealso{
Other lsd arithmetic functions: \code{\link{deb_divide_mutate}},
  \code{\link{deb_multiply_mutate}},
  \code{\link{deb_multiply}}, \code{\link{deb_subtract}}
}
