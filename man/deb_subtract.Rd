% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/lsd-arithmetic.R
\name{deb_subtract}
\alias{deb_subtract}
\title{Subtract two values of pounds, shillings, and pence}
\usage{
deb_subtract(lsd1, lsd2, round = 3)
}
\arguments{
\item{lsd1, lsd2}{Numeric vectors of length 3 or lists of numeric vectors of
length 3. The first position of the vector represents the pounds value or
l. The second position represents the shillings value or s. And the third
position represents the pence value or d. lsd2 is the value or values to be
subtracted from lsd1: \code{lsd1 - lsd2}.}

\item{round}{Round pence to specified number of decimal places.
Default is 3. Set to 0 to return pence as whole numbers.}
}
\value{
Returns either a named numeric vector of length 3 or a list of
named numeric vectors representing the values of pounds, shillings,
and pence. If the input lsd value is negative, the l, s, and d values
will all be negative.
}
\description{
Subtract and normalize two values of pounds, shillings, and pence
that are given in the form of either two numeric vectors or two lists
of numeric vectors (\code{lsd1} and \code{lsd2}). This is a wrapper around
\code{\link[=deb_normalize]{deb_normalize()}}.
}
\details{
If \code{lsd1} and \code{lsd2} are lists of different lengths or one is a vector,
the shorter list will be recycled.
}
\examples{
# Subtract pounds, shillings, and pence
deb_subtract(lsd1 = c(56, 8, 5), lsd2 = c(19, 5, 7))

# The l, s, and d values do not have to be normalized
deb_subtract(lsd1 = c(76, 65, 35), lsd2 = c(9, 54, 17))

# Like deb_normalize(), deb_subtract can handle decimals
deb_subtract(lsd1 = c(56.85, 8.4, 5), lsd2 = c(19.25, 5, 7))

# lsd1 and lsd2 can be lists of numerical vectors
# Each vector in lsd1 will be subtracted from the
# corresponding vector in lsd2.
deb_subtract(lsd1 = list(c(56, 8, 5), c(27, 12, 4)),
             lsd2 = list(c(19, 5, 7), c(6, 3, 2)))

# If lsd1 and lsd2 are lists of different lengths
# or one is a vector, the shorter argument is recycled.
deb_subtract(lsd1 = list(c(56, 8, 5),
                         c(27, 12, 4),
                         c(78, 14, 11)),
             lsd2 = c(6, 18, 10))

}
\seealso{
Other lsd arithmetic functions: \code{\link{deb_divide_mutate}},
  \code{\link{deb_divide}},
  \code{\link{deb_multiply_mutate}},
  \code{\link{deb_multiply}}
}
