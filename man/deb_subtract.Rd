% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/lsd-arithmetic.R
\name{deb_subtract}
\alias{deb_subtract}
\title{Subtract two values of pounds, shillings, and pence}
\usage{
deb_subtract(lsd1, lsd2, lsd_bases = c(20, 12), round = 3)
}
\arguments{
\item{lsd1, lsd2}{Numeric vectors of length 3 or lists of numeric vectors of
length 3. The first position of the vector represents the pounds value or
l. The second position represents the shillings value or s. And the third
position represents the pence value or d. lsd2 is the value or values to be
subtracted from lsd1: \code{lsd1 - lsd2}.}

\item{lsd_bases}{Numeric vector of length 2 used to specify the bases for
the s or solidus and d or denarius values in \code{lsd} vectors. Default is
\code{c(20, 12)}, which conforms to the most widely used system of 1 libra =
20 solidi and 1 solidus = 12 denarii. This argument makes it possible to
use alternative bases for the solidus and denarius values that were also
in use.}

\item{round}{Round pence to specified number of decimal places.
Default is 3. Set to 0 to return pence as whole numbers.}
}
\value{
Returns either a named numeric vector of length 3 or a list of
named numeric vectors representing the values of pounds, shillings,
and pence. If the resulting lsd value is negative, the l, s, and d values
will all be negative.
}
\description{
Subtract and normalize two values of pounds, shillings, and pence
that are given in the form of either numeric vectors or lists
of numeric vectors (\code{lsd1} and \code{lsd2}). This is a wrapper around
\code{\link[=deb_normalize]{deb_normalize()}}.
}
\details{
If \code{lsd1} and \code{lsd2} are lists of different lengths or one is a vector,
the shorter list will be recycled.
}
\examples{
# Subtract pounds, shillings, and pence
deb_subtract(lsd1 = c(56, 8, 5), lsd2 = c(19, 5, 7))

# This is equivalent to using deb_normalize
deb_normalize(lsd = c(56, 8, 5) - c(19, 5, 7))

# deb_subtract is useful when one or both of
# lsd1 and lsd2 are lists of numerical vectors

# With two lists of the same length each vector in lsd1
# will be subtracted from the corresponding vector in lsd2.
deb_subtract(lsd1 = list(c(56, 8, 5), c(27, 12, 4)),
             lsd2 = list(c(19, 5, 7), c(6, 3, 2)))

# As opposed to using deb_normalize, which will not work
\dontrun{
deb_normalize(list(c(56, 8, 5), c(27, 12, 4)) - list(c(19, 5, 7), c(6, 3, 2)))
}

# If lsd1 and lsd2 are lists of different lengths
# or one is a vector, the shorter argument is recycled.
deb_subtract(lsd1 = list(c(56, 8, 5),
                         c(27, 12, 4),
                         c(78, 14, 11)),
             lsd2 = c(6, 18, 10))

}
\seealso{
Other lsd arithmetic functions: \code{\link{deb_add_mutate}},
  \code{\link{deb_add}}, \code{\link{deb_divide_mutate}},
  \code{\link{deb_divide}},
  \code{\link{deb_multiply_mutate}},
  \code{\link{deb_multiply}},
  \code{\link{deb_subtract_mutate}},
  \code{\link{deb_sum_df}}, \code{\link{deb_sum}}
}
