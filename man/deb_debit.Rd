% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/lsd-accounts.R
\name{deb_debit}
\alias{deb_debit}
\title{Calculate the total debit of accounts}
\usage{
deb_debit(df, debit = debit, l = l, s = s, d = d, lsd_bases = c(20,
  12), round = 3)
}
\arguments{
\item{df}{A data frame containing transactions between accounts that has
values represented in the form of pounds, shillings, and pence variables.
The data frame should have two variables for accounts (credit and debit)
and variables for pounds, shillings, and pence.}

\item{debit}{debit column: Unquoted name of the debit variable. This is
the column to which the value of the transaction goes. Default
is debit. The debit column must be of the same class as the credit
column.}

\item{l}{Pounds column: Unquoted name of a numeric variable corresponding
to pounds. Default is l.}

\item{s}{Shillings column: Unquoted name of numeric variable corresponding
to shillings. Default is s.}

\item{d}{Pence column: Unquoted name of numeric variable corresponding to
pence. Default is d.}

\item{lsd_bases}{Numeric vector of length 2 used to specify the bases for
the s or solidus and d or denarius values in \code{lsd} vectors. Default is
\code{c(20, 12)}, which conforms to the most widely used system of 1 libra =
20 solidi and 1 solidus = 12 denarii. This argument makes it possible to
use alternative bases for the solidus and denarius values that were also
in use.}

\item{round}{Round pence to specified number of decimal places.
Default is 3. Set to 0 if you want pence to always be a whole number.}
}
\value{
Returns a tibble with four columns and one row for each account
present in the transactions data frame (\code{df}). The values represent the
total value sent by each account to other accounts within \code{df} in the
form of pounds, shillings, and pence. The names for the pounds,
shillings, and pence columns correspond to the input for \code{l}, \code{s},
and \code{d}.
}
\description{
Calculate the total debit of accounts in a transactions data frame (\code{df})
in the form of pounds, shillings, and pence.
}
\details{
\code{deb_debit()} is similar to \code{\link[=deb_account_summary]{deb_account_summary()}}, but it only returns
the debit totals for the accounts in \code{df}. See \code{\link[=deb_credit]{deb_credit()}} to return
the credit totals for the accounts in \code{df}.

\code{deb_debit()} is part of a family of functions meant to be used on
data frames that contain transactions between accounts likely contained in
an account book. The data frame should possess a similar structure to a
\href{https://www.jessesadler.com/post/network-analysis-with-r/#nodes-edges}{directed edge list}.
In this context, credit and debit variables filled with the ids of the
accounts act as the edges of the network. Following the
\href{https://en.wikipedia.org/wiki/Debits_and_credits}{nomenclature of accounting},
the credit variable represents the account from which a value goes out,
while the debit variable represents the account that receives the value.
Thus, from the credit account to the debit account.
}
\examples{
# Create a transactions data frame
trans <- data.frame(credit = c("a", "b", "a", "c"),
                    debit = c("b", "a", "c", "a"),
                    l = c(10, 10, 7, 9),
                    s = c(15, 15, 11, 2),
                    d = c(6, 6, 8, 11))

# Total debit of accounts present in trans
deb_debit(trans, debit, l, s, d)

}
\seealso{
Other lsd account functions: \code{\link{deb_account_summary}},
  \code{\link{deb_account}}, \code{\link{deb_balance}},
  \code{\link{deb_credit}}, \code{\link{deb_current}},
  \code{\link{deb_open}}
}
