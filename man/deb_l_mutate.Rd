% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/lsd-mutate.R
\name{deb_l_mutate}
\alias{deb_l_mutate}
\title{Mutate decimal pounds into pounds, shillings, and pence variables}
\usage{
deb_l_mutate(df, librae, l_column = l, s_column = s, d_column = d,
  suffix = ".1", round = 3)
}
\arguments{
\item{df}{A data frame that contains a column of decimalized pounds.}

\item{librae}{Decimalized pounds column: Unquoted name of a numeric
variable corresponding to pounds. This is the variable that will be
mutated into pounds, shillings, and pence variables.}

\item{l_column}{An unquoted name for the pounds column created by the
function. Default is l.}

\item{s_column}{An unquoted name for the shillings column created by
the function. Default is s.}

\item{d_column}{An unquoted name for the pence column created by the
function. Default is d.}

\item{suffix}{If the data frame already contains variables with the same
names as \code{l_column}, \code{s_column}, or \code{d_column}, this suffix will be
added to the new variables to distinguish them.}

\item{round}{round pence to specified number of decimal places.
Default is 3. Set to 0 to return pence as whole numbers.}
}
\value{
Returns a data frame with three new variables of pounds,
shillings, and pence.
}
\description{
Uses \code{\link[dplyr:mutate]{dplyr::mutate()}} to add equivalent pounds, shillings, and pence
variables to a data frame that contains a decimalized pounds variable.
Thus, the function converts decimalized pounds into the lsd system of
pounds, shillings, and pence.
}
\examples{
# Create equivalent pounds, shillings, and pence
# variables from a decimalized pounds variable
example <- tibble::tibble(pounds = c(8, 8.325, -8.325, 5.425, 4.5678))

deb_l_mutate(example, pounds)

# You can choose the names for the created columns
example \%>\%
  deb_l_mutate(pounds,
               l_column = librae,
               s_column = solidi,
               d_column = denarii)

}
