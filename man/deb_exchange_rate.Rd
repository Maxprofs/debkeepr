% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/lsd-exchange.R
\name{deb_exchange_rate}
\alias{deb_exchange_rate}
\title{Exchange rate between pounds, shillings, and pence values}
\usage{
deb_exchange_rate(lsd1, lsd2, output = c("shillings", "pence", "pounds"),
  lsd_bases = c(20, 12))
}
\arguments{
\item{lsd1}{Pounds, shillings, and pence, value that is reduced to £1 and
against which \code{lsd2} is compared. \code{lsd1} is a numeric vector of length 3
or list of numeric vectors of length 3. The first position of the vectors
represents the pounds value or l. The second position represents the
shillings value or s. And the third position represents the pence value
or d.}

\item{lsd2}{Pounds, shillings, and pence, value that is compared to \code{lsd1}.
Thus, when \code{lsd1} equals £1, \code{lsd2} equals the returned value. \code{lsd2} is
a numeric vector of length 3 or list of numeric vectors of length 3. The
first position of the vectors represents the pounds value or l. The second
position represents the shillings value or s. And the third position
represents the pence value or d.}

\item{output}{Choice of either \code{"shillings"}, \code{"pence"}, or \code{"pounds"} for
the format in which the exchange rate will be returned.  \code{"shillings"},
the default, returns the exchange rate in terms of shillings and pence.
\code{"pence"} returns the exchange rate in terms of pence. \code{"pounds"} returns
the exchange rate in terms of pounds, shillings, and pence.}

\item{lsd_bases}{Numeric vector of length 2 used to specify the bases for
the s or solidus and d or denarius values in \code{lsd} vectors. Default is
\code{c(20, 12)}, which conforms to the most widely used system of 1 libra =
20 solidi and 1 solidus = 12 denarii. This argument makes it possible to
use alternative bases for the solidus and denarius values that were also
in use.}
}
\value{
Returns either a named numeric vector of length 3 or a list of
named numeric vectors representing the values of pounds, shillings,
and pence. The format of the returned value is determined by the \code{output}
argument. If \code{lsd1} > \code{lsd2}, the returned value will be less that £1.
}
\description{
Calculate the exchange rate between two sets of values in the form of
pounds, shillings, and pence. The rate is returned in the form of either
pounds, shillings, and pence; shillings and pence; or just pence. \code{lsd1}
and \code{lsd2} must have the same bases for the shillings and pence units.
}
\details{
If \code{lsd1} and \code{lsd2} are lists of different lengths or one is a vector,
the shorter list will be recycled.
}
\examples{
# Find the exchange rate if £166 13s 4d in one currency is
# equivalent to £100 0s 0d in another currency in terms of shillings
deb_exchange_rate(lsd1 = c(166, 13, 4), lsd2 = c(100, 0, 0))

# Exchange rate for the opposite direction
deb_exchange_rate(lsd1 = c(100, 0, 0), lsd2 = c(166, 13, 4))

# Exchange rate in terms of pence
deb_exchange_rate(lsd1 = c(125, 0, 0),
                  lsd2 = c(46, 17, 6),
                  output = "pence")

# Exchange rate in terms of pounds, shillings, and pence
deb_exchange_rate(lsd1 = c(100, 0, 0),
                  lsd2 = c(166, 13, 4),
                  output = "pounds")

# To find decimalized ratio between currencies use
# deb_exchange_rate() with deb_lsd_l()
deb_exchange_rate(lsd1 = c(100, 0, 0), lsd2 = c(166, 13, 4)) \%>\%
  deb_lsd_l()

# To find the exchange rate for multiple currencies
# use a list of lsd vectors for `lsd1` or `lsd2`
list_a <- list(c(150, 0, 0), c(125, 0, 0), c(175, 13, 4))
list_b <- list(c(125, 0, 0), c(75, 8, 4), c(100, 10, 0))

deb_exchange_rate(lsd1 = list_a, lsd2 = list_b)

# Or find the exchange rate of multiple currencies to a
# single currency by using a vector for `lsd2`
deb_exchange_rate(lsd1 = list_a, lsd2 = c(100, 0, 0))

}
